package Rain;
import java.util.ArrayList;
import java.util.Scanner;

class Student {
    private int id;
    private String name;
    private int age;
    private String grade;
    private String enrollmentStatus;

    public Student(int id, String name, int age, String grade, String enrollmentStatus) {
        this.id = id;
        this.name = name;
        this.age = age;
        this.grade = grade;
        this.enrollmentStatus = enrollmentStatus;
    }

    public int getId() {
        return id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public int getAge() {
        return age;
    }

    public void setAge(int age) {
        this.age = age;
    }

    public String getGrade() {
        return grade;
    }

    public void setGrade(String grade) {
        this.grade = grade;
    }

    public String getEnrollmentStatus() {
        return enrollmentStatus;
    }

    public void setEnrollmentStatus(String enrollmentStatus) {
        this.enrollmentStatus = enrollmentStatus;
    }

    @Override
    public String toString() {
        return "ID: " + id + ", Name: " + name + ", Age: " + age +
               ", Grade: " + grade + ", Enrollment Status: " + enrollmentStatus;
    }
}

public class SMS {
	 private static ArrayList<Student> students = new ArrayList<>();
	    private static int nextId = 1;
	    
	    public static void main(String[] args) {
	        preloadStudents();
	        Scanner scanner = new Scanner(System.in);
	        int choice;

	        do {
	            System.out.println("\n--- Student Management System ---");
	            System.out.println("1. Add Student");
	            System.out.println("2. View All Students");
	            System.out.println("3. Search Student");
	            System.out.println("4. Update Student");
	            System.out.println("5. Delete Student");
	            System.out.println("6. Exit");
	            System.out.print("Enter your choice: ");
	            choice = scanner.nextInt();

	            switch (choice) {
	                case 1:
	                    addStudent(scanner);
	                    break;
	                case 2:
	                    viewAllStudents();
	                    break;
	                case 3:
	                    searchStudent(scanner);
	                    break;
	                case 4:
	                    updateStudent(scanner);
	                    break;
	                case 5:
	                    deleteStudent(scanner);
	                    break;
	                case 6:
	                    System.out.println("Exiting the program. Goodbye!");
	                    break;
	                default:
	                    System.out.println("Invalid choice. Please try again.");
	            }
	        } while (choice != 6);

	        scanner.close();
	    }

	    
	    private static void preloadStudents() {
	        students.add(new Student(nextId++, "Alice Johnson", 15, "9th Grade", "Enrolled"));
	        students.add(new Student(nextId++, "Bob Smith", 16, "10th Grade", "Enrolled"));
	        students.add(new Student(nextId++, "Charlie Brown", 17, "11th Grade", "Enrolled"));
	        students.add(new Student(nextId++, "Diana Prince", 16, "10th Grade", "Enrolled"));
	        students.add(new Student(nextId++, "Edward Cullen", 18, "12th Grade", "Enrolled"));
	        students.add(new Student(nextId++, "Fiona Davis", 15, "9th Grade", "Enrolled"));
	        students.add(new Student(nextId++, "George Miller", 17, "11th Grade", "Enrolled"));
	        students.add(new Student(nextId++, "Hannah Montana", 16, "10th Grade", "Enrolled"));
	        students.add(new Student(nextId++, "Ian Fleming", 18, "12th Grade", "Enrolled"));
	        students.add(new Student(nextId++, "Julia Roberts", 15, "9th Grade", "Enrolled"));
	        students.add(new Student(nextId++, "Kevin Hart", 16, "10th Grade", "Enrolled"));
	        students.add(new Student(nextId++, "Laura Croft", 17, "11th Grade", "Enrolled"));
	        students.add(new Student(nextId++, "Michael Jordan", 18, "12th Grade", "Enrolled"));
	        students.add(new Student(nextId++, "Nancy Drew", 15, "9th Grade", "Enrolled"));
	        students.add(new Student(nextId++, "Oliver Twist", 16, "10th Grade", "Enrolled"));
	        students.add(new Student(nextId++, "Paula Abdul", 17, "11th Grade", "Enrolled"));
	        students.add(new Student(nextId++, "Quentin Blake", 18, "12th Grade", "Enrolled"));
	    }

	  
	    private static void addStudent(Scanner scanner) {
	        System.out.print("Enter student name: ");
	        scanner.nextLine(); 
	        String name = scanner.nextLine();
	        System.out.print("Enter student age: ");
	        int age = scanner.nextInt();
	        System.out.print("Enter student grade: ");
	        scanner.nextLine(); 
	        String grade = scanner.nextLine();
	        String enrollmentStatus = "Enrolled";

	        Student newStudent = new Student(nextId++, name, age, grade, enrollmentStatus);
	        students.add(newStudent);
	        System.out.println("Student added successfully!");
	    }

	   
	    private static void viewAllStudents() {
	        if (students.isEmpty()) {
	            System.out.println("No students in the system.");
	        } else {
	            System.out.println("\nList of Students:");
	            for (Student student : students) {
	                System.out.println(student);
	            }
	        }
	    }

	    
	    private static void searchStudent(Scanner scanner) {
	        System.out.print("Enter student ID or name to search: ");
	        scanner.nextLine(); 
	        String input = scanner.nextLine();

	        boolean found = false;
	        for (Student student : students) {
	            if (String.valueOf(student.getId()).equals(input) || student.getName().equalsIgnoreCase(input)) {
	                System.out.println(student);
	                found = true;
	            }
	        }

	        if (!found) {
	            System.out.println("No student found with the given ID or name.");
	        }
	    }

	    
	    private static void updateStudent(Scanner scanner) {
	        System.out.print("Enter the ID of the student to update: ");
	        int id = scanner.nextInt();
	        Student student = findStudentById(id);

	        if (student != null) {
	            System.out.print("Enter new name (leave blank to keep unchanged): ");
	            scanner.nextLine(); 
	            String newName = scanner.nextLine();
	            if (!newName.isEmpty()) {
	                student.setName(newName);
	            }

	            System.out.print("Enter new age (0 to keep unchanged): ");
	            int newAge = scanner.nextInt();
	            if (newAge != 0) {
	                student.setAge(newAge);
	            }

	            System.out.print("Enter new grade (leave blank to keep unchanged): ");
	            scanner.nextLine();
	            String newGrade = scanner.nextLine();
	            if (!newGrade.isEmpty()) {
	                student.setGrade(newGrade);
	            }

	            System.out.print("Enter new enrollment status (leave blank to keep unchanged): ");
	            String newStatus = scanner.nextLine();
	            if (!newStatus.isEmpty()) {
	                student.setEnrollmentStatus(newStatus);
	            }

	            System.out.println("Student updated successfully!");
	        } else {
	            System.out.println("Student not found.");
	        }
	    }

	    
	    private static void deleteStudent(Scanner scanner) {
	        System.out.print("Enter the ID of the student to delete: ");
	        int id = scanner.nextInt();
	        Student student = findStudentById(id);

	        if (student != null) {
	            students.remove(student);
	            System.out.println("Student deleted successfully!");
	        } else {
	            System.out.println("Student not found.");
	        }
	    }

	  
	    private static Student findStudentById(int id) {
	        for (Student student : students) {
	            if (student.getId() == id) {
	                return student;
	            }
	        }
	        return null;
	    }
	}
